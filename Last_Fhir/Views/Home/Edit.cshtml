@model Hl7.Fhir.Model.Patient

@{
    ViewData["Title"] = "Edit";
}



<hr />
<div class="panel panel-primary">
    <div class="panel-heading">Modification</div>
    <div class="row panel-body">
        <div class="col-md-4">
            <form method="post" asp-action="update">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="hidden">
                    @Html.LabelFor(p => p.Id, new { @class = "control-label" })
                    @Html.TextBoxFor(p => p.Id, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Id, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label class="control-label">Préfix</label>
                    @Html.TextBoxFor(p => p.Name[0].PrefixElement[0].Value, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Name[0].PrefixElement[0].Value, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <label class="control-label">Nom</label>
                    @Html.TextBoxFor(p => p.Name[0].Family, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Name[0].Family, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">

                    <label class="control-label">Prénom</label>
                    @Html.TextBoxFor(p => p.Name[0].GivenElement[0].Value, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Name[0].GivenElement[0].Value, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">

                    <label class="control-label">Sexe</label>
                    @Html.TextBoxFor(p => p.Gender, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Gender, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">

                    <label class="control-label">Date de naissance</label>
                    @Html.TextBoxFor(p => p.BirthDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.BirthDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">

                    <label class="control-label">Telephone</label>
                    @Html.TextBoxFor(p => p.Telecom[0].Use, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Telecom[0], "", new { @class = "text-danger" })
                </div>

                <div class="form-group">

                    <label class="control-label">Adresse</label>
                    @Html.TextBoxFor(p => p.Address[0].LineElement[0].Value, new { @class = "form-control" })
                    @Html.ValidationMessageFor(p => p.Address[0].Line, "", new { @class = "text-danger" })
                </div>

            

              
                <div class="form-group">
                    <input type="submit" value="Enregistrer" class="btn btn-primary" />
                </div>

            </form>
        </div>
    </div>
    </div>

    <div>
        <a asp-action="Index">Retour à la liste</a>
    </div>

